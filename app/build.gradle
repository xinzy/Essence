apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.xinzy.essence"

        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file('../keystore.release.jks')
            storePassword '123123'
            keyAlias 'essence'
            keyPassword '1qaz2wsx'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile project(':library')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:4.12"
    compile rootProject.ext.dependencies.supportAppcompat
    compile rootProject.ext.dependencies.supportCardview
    compile rootProject.ext.dependencies.supportDesign

    compile rootProject.ext.dependencies.okhttp
    compile rootProject.ext.dependencies.retrofit
    compile rootProject.ext.dependencies.retrofitGson
    compile rootProject.ext.dependencies.retrofitRxJava
    compile rootProject.ext.dependencies.picasso

    compile rootProject.ext.dependencies.stetho
    compile rootProject.ext.dependencies.stethoOkhttp

    compile rootProject.ext.dependencies.rxAndroid

    compile rootProject.ext.dependencies.arouterApi
    annotationProcessor rootProject.ext.dependencies.arouterCompiler

    provided rootProject.ext.dependencies.tinkerProdiver
    compile rootProject.ext.dependencies.tinkerApi
}

android.applicationVariants.all { variant ->
    def taskName = variant.name
    def date = new Date().format("yyyyMMddHHmmss")

    tasks.all {
        if ("assemble${taskName.capitalize()}".equalsIgnoreCase(it.name)) {

            it.doLast {
                copy {
                    def fileNamePrefix = "${project.name}-${variant.baseName}"
                    def newFileNamePrefix = "${fileNamePrefix}" //"${fileNamePrefix}-${date}"

                    def destPath = file("${buildDir}/${project.name}-${date}/${variant.flavorName}")
                    from variant.outputs.outputFile
                    into destPath
                    rename { String fileName ->
                        fileName.replace("${fileNamePrefix}.apk", "${newFileNamePrefix}.apk")
                    }
                }
            }
        }
    }
}

/////////////////////////////////////////////////////////////////////////////////
// Tinker Config
/////////////////////////////////////////////////////////////////////////////////

def isTinkerEnable() {
    return hasProperty("TINKER_ENABLE") ? TINKER_ENABLE : rootProject.ext.tinker.tinkerEnable
}

def getTinkerId() {
    return hasProperty("TINKER_ID") ? TINKER_ID : rootProject.ext.versionName
}

if (isTinkerEnable()) {
    apply plugin: 'com.tencent.tinker.patch'

    tinkerPatch {
        oldApk = ''

        ignoreWarning = false

        useSign = true

        tinkerEnable = isTinkerEnable()

        buildConfig {
            applyMapping = ''

            applyResourceMapping = ''

            tinkerId = rootProject.ext.versionName

            println 'fuck tinkerId = ' + tinkerId

            keepDexApply = false
        }
    }

}